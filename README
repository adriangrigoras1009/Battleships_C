BATTLESHIP

	Pentru meniu, m-am inspirat din documentatia oferita in fisierul cu enuntul temei, si am adaptat-o in cazul jocului. Am creat o fereastra in care sa existe fiecare optiune pe care o pot alege. Optiunea luminata este optiunea pe care sunt in momentul de fata si pe care o voi alege daca apas enter.
	In cazul hartii calculatorului am stabilit sa le generez intr-o ordine (4,3,2,1) si sa generez o pozitie(verticala sau orizontala). Dupa asta sa verific daca este o pozitie valida si daca nava a fost pusa cu succes creste un contor pentru a pune exact cate nave trebuie. Harta mea este citita din fisier si daca nu a fost citita cum trebuie apare mesaj corespunzator. 
	Am creat hartile cu ajutorul ferestrelor mici si am facut marcajul cu b-daca nu a fost incercata, 1-incercata si nimerita si 0-incercata dar nu e bucata de nava. Casuta pe care ma aflu in momentul respectiv este colorata pe exterior cu rosu. Am realizat si culoarea verde a scrisului pentru cazul in care jucatorul nimereste una dintre pozitiile in care era o harta pentru a fi mai vizibile pozitiile posibile. Cand botul alege am pus un timp doar de o secunda in loc de 3. De asemenea am pus un contorizator in dreapta ecranului care mentine numarul de casute distruse la momentul respectiv. Interactiunea cu jocul am facut-o prin intermediul tastaturii. De asemenea am implementat optiunea ca botul dupa ce a nimerit o parte de nava din harta jucatorului sa incerce una din optiunile de langa. De asemenea am introdus optiunea de a salva un joc prin tasta "s" pentru a fi incarcat in resume, altfel optiunea resume nu va functiona.
	Pentru randomize, navele care au fost ghicite in intregime raman ghicite si doar isi schimba pozitia, iar navele partial distruse sau deloc distruse isi schimba pozitia si partile care au fost afectate raman afectate dar se afla in alte locuri, iar navele nu isi schimba compozitia. Optiunea Destroy in advance distruge 10 celule aleatore de pe harta celor doi jucatori netinand cont de optiunea ca daca a fost 1 are mai multe incercari, ci pur si simplu inainteaza jocul.
	Cand unul dintre jucatori a castigat(sau s-a incheiat remiza) este afisat numarul de barci care a fost distrus.

	Legat de memoria dinamica, nu am alocat memorie deoarece nu am avut nevoie(am folosit doar matrici cu un numar fix de elemente de 10 pe 10, iar matricile ajutatoare la fel au fost tot de numar fix).
